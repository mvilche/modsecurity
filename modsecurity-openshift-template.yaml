    ##comienzo Template
  apiVersion: v1
  kind: Template
  metadata:
    name: wildlfy-s2i-mvilche
    labels:
      template: wildlfy-s2i-mvilche
      autor: "Martin_Fabrizzio_Vilche"
    annotations:
      openshift.io/display-name: "apache-modsecurity-mvilche"
      iconClass: "icon-github"
      description: >-
        Centos Apache httpd Server + Modsecurity Last rules
      openshift.io/provider-display-name: "Martin Fabrizzio Vilche"
      openshift.io/documentation-url: "https://github.com/mvilche/modsecurity.git"
      openshift.io/support-url: "https://github.com/mvilche/modsecurity.git"
  message: >-
    Enjoy!

  objects:

  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: "${APP_NAME}"
      name: "${APP_NAME}"
    spec:
      replicas: 1
      revisionHistoryLimit: 10
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      strategy:
        activeDeadlineSeconds: 21600
        resources:
          requests:
            cpu: 200m
            memory: 256Mi
          limits:
            cpu: 500m
            memory: 500Mi        
        rollingParams:
          intervalSeconds: 1
          maxSurge: 25%
          maxUnavailable: 25%
          timeoutSeconds: 600
          updatePeriodSeconds: 1
        type: Rolling
      template:
        metadata:
          labels:
            app: ${APP_NAME}
            deploymentconfig: ${APP_NAME}
        spec:
          containers:
            - image: "${APP_NAME}:latest"
              env:
                - name: SERVERNAME
                  value: ${SERVERNAME}
                - name: PROXY_IP
                  value: ${PROXY_IP}
                - name: PROXY_PORT
                  value: ${PROXY_PORT}
                - name: PROTOCOL_PROXY
                  value: ${PROTOCOL_PROXY}
                - name: MODSECURITY_STATUS
                  value: ${MODSECURITY_STATUS}   
              imagePullPolicy: Always
              name: ${APP_NAME}
              ports:
                - containerPort: 8080
                  protocol: TCP
                  name: http
                - containerPort: 8443
                  protocolo: TCP
                  name: https
              resources:
                requests:
                  cpu: 200m
                  memory: 256Mi
                limits:
                  cpu: 500m
                  memory: 500Mi
              terminationMessagePath: /dev/termination-log
              terminationMessagePolicy: File
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
      test: false
      triggers:
        - type: ConfigChange
        - imageChangeParams:
            automatic: true
            containerNames:
              - ${APP_NAME}
            from:
              kind: ImageStreamTag
              name: "${APP_NAME}:latest"
          type: ImageChange



  - apiVersion: v1
    kind: BuildConfig
    metadata:
      labels:
        app: ${APP_NAME}
        build: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      failedBuildsHistoryLimit: 5
      nodeSelector: null
      output:
        to:
          kind: ImageStreamTag
          name: '${APP_NAME}:latest'
      postCommit: {}
      resources: {}
      runPolicy: Serial
      source:
        contextDir: Dockerfiles
        git:
          ref: master
          uri: 'https://github.com/mvilche/modsecurity.git'
        type: Git
      strategy:
        dockerStrategy:
          dockerfilePath: Dockerfile
        type: Docker
      successfulBuildsHistoryLimit: 5
      triggers:
        - type: ConfigChange



  - apiVersion: v1
    kind: Service
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
        - name: https
          port: 8443
          protocol: TCP
          targetPort: 8443
      selector:
        app: ${APP_NAME}
        deploymentconfig: ${APP_NAME}
      sessionAffinity: None
      type: ClusterIP


  - apiVersion: v1
    kind: Route
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec:
      host: ${SERVERNAME}
      port:
        targetPort: https
      tls:
        insecureEdgeTerminationPolicy: Redirect
        termination: passthrough        
      to:
        kind: Service
        name: ${APP_NAME}
        weight: 100
      wildcardPolicy: None


  - apiVersion: v1
    kind: ImageStream
    metadata:
      labels:
        app: ${APP_NAME}
      name: ${APP_NAME}
    spec: {}

######


  parameters:
    - name: APP_NAME
      displayName: Nombre del deployment
      value: 'modsecurity'
      required: true
    - name: SERVERNAME
      displayName: Nombre del dominio
      value: ''
      required: true
    - name: PROXY_IP
      displayName: Ip o nombre del servicio del servidor backend
      value: ''
      required: true
    - name: PROXY_PORT
      displayName: Puerto del servidor backend
      value: ''
      required: true                  
    - name: PROTOCOL_PROXY
      displayName: Protocolo de comunicaci√≥n con el backend (ajp, http, https)
      value: ''
      required: true
    - name: MODSECURITY_STATUS
      displayName: Estado de modsecurity (On, Off, DetectionOnly)
      value: ''
      required: true  
